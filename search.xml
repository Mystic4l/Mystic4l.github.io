<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>本科总结</title>
      <link href="/2023/11/17/%E6%9C%AC%E7%A7%91%E6%80%BB%E7%BB%93/"/>
      <url>/2023/11/17/%E6%9C%AC%E7%A7%91%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>封装docker镜像</title>
      <link href="/2023/11/17/%E5%B0%81%E8%A3%85docker%E9%95%9C%E5%83%8F/"/>
      <url>/2023/11/17/%E5%B0%81%E8%A3%85docker%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>这几天收到的要把UCTB可视化工具通过自动化脚本部署到组内服务器上的工作。按照之前师兄的操作似乎是在.gitlab-ci.yml中编写脚本来实现的。<br>然而，之前的可视化代码过于抽象，既有前端的原生三件套开发，又混杂这vue等框架的使用，最后通过python构建简易服务器来访问，只能说开眼了。我们现在的可视化工具使用的是vue，自然部署方式跟之前不同。在网上试了一大堆方案，但并没有啥用。</p><p><img src="/images/1.png" alt="失败测试"></p><p>看着现成的东西不好用，打算只能去学习自己的想法，去看了下报错。</p><p><img src="/images/2.png" alt="1700205627108"></p><p>好家伙，全都是一个错，从报错信息来看，似乎是docker拉取不到python的镜像。在跟博士师兄讨论之后，最终决定把可视化工具打包成docker镜像，推送到Dockerhub上，直接通过yml脚本拉取镜像来实现部署。</p><h2 id="封装docker镜像"><a href="#封装docker镜像" class="headerlink" title="封装docker镜像"></a>封装docker镜像</h2><p>想起上次用docker还是大二大三的时候，这里就简单介绍下docker。docker：一个使用go语言开发的容器项目，可以方便我们创建和使用容器。在docker中，我们可以屏蔽不同的操作系统的差异以及程序的影响，因为docker容器中仅包含了相关的应用与对应的环境，使得我们可以在任意操作系统下使用。相比于虚拟机，容器技术对于硬件的占用更小，同时启动更加迅速，并保留了虚拟机最大的优势，具有隔离性，从而避免应用或程序之间的相互影响。详细文档参考：<a href="https://zhuanlan.zhihu.com/p/187505981">什么是Docker？看这一篇就够了</a></p><p>之前，我已经把可视化项目部署在阿里云上，也就是说把阿里云上相对应的环境与应用用容器封装起来即可。</p><p>首先，由于vue项目的部署是放在nginx上面的，我们需要用docker拉取一个nginx的镜像，即给自己的应用提供一个基础环境。</p><pre><code>docker pull nginx</code></pre><p>接下来，在你要打包的根目录下创建nginx的config配置文件</p><pre><code>server &#123;    listen       80;    server_name  localhost; # 修改为docker服务宿主机的ip, 经测试不用修改也可以    location / &#123;        root   /usr/share/nginx/html;        index  index.html index.htm;        try_files $uri $uri/ /index.html =404;    &#125;    error_page   500 502 503 504  /50x.html;    location = /50x.html &#123;        root   html;    &#125;&#125;</code></pre><p>该配置文件定义了首页的指向为<code>/usr/share/nginx/html/index.html</code>, 所以我们可以一会把构建出来的index.html文件和相关的静态资源放到<code>/usr/share/nginx/html</code>目录下</p><p>然后，继续在根目录下创建Dockerfile文件，写入一下内容</p><pre><code>FROM nginx RUN rm /etc/nginx/conf.d/default.conf ADD default.conf /etc/nginx/conf.d/COPY dist/ /usr/share/nginx/html/</code></pre><p><code>FROM nginx</code>：该镜像是基于nginx:latest镜像构建的<br><code>RUN rm /etc/nginx/conf.d/default.conf</code>：删除目录下的default.conf文件<br><code>ADD default.conf /etc/nginx/conf.d/</code>：将default.conf复制到&#x2F;etc&#x2F;nginx&#x2F;conf.d&#x2F;下，用本地的default.conf配置来替换nginx镜像里的默认配置<br><code>COPY dist/ /usr/share/nginx/html/</code>：将项目根目录下dist文件夹（构建之后才会生成,采用npm run build）下的所有文件复制到镜像&#x2F;usr&#x2F;share&#x2F;nginx&#x2F;html&#x2F;目录下</p><p>最后，构建docker镜像，docker build -t 镜像名 .</p><pre><code>docker build -t uctb-web .</code></pre><p>注意不要少了最后的“.”(点), -t是给镜像命名，.(点)是基于当前目录的Dockerfile来构建镜像</p><p>查看本地镜像，即可看到自己构建的代码</p><pre><code>docker images</code></pre><h2 id="将镜像上传至DockerHub"><a href="#将镜像上传至DockerHub" class="headerlink" title="将镜像上传至DockerHub"></a>将镜像上传至DockerHub</h2><p>首先，需要通过<code>docker login</code>登录，否则在push到DockerHub的时候会被拒绝，若不知道或者没有dockerhub账号，可以通过 <a href="https://hub.docker.com/">DockerHub</a>注册</p><pre><code>440e02c3dcde: Waiting 29660d0e5bb2: Waiting 85782553e37a: Waiting 745f5be9952c: Waiting denied: requested access to the resource is denied</code></pre><p>登录完成后，需要通过<code>docker tag</code>对镜像进行改名，docker tag 镜像名 DockerHub名&#x2F;自定义名称:版本号</p><pre><code>docker tag uctb-web trafa1gar/uctb:latest</code></pre><p>之后，把改名后的镜像push即可,不需要带版本号</p><pre><code>docker push trafa1gar/uctb</code></pre><p><img src="/images/3.png" alt="1"></p><p>此时，就已经把镜像推送DockerHub仓库中，可以从任意一台电脑上来使用</p><pre><code>docker pull trafa1gar/uctb</code></pre><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://blog.csdn.net/weixin_44786530/article/details/128252147">使用docker构建vue项目并成功运行在本地和线上</a></li><li><a href="https://blog.csdn.net/baidu_19473529/article/details/70156144">上传自己的镜像被拒绝denied: requested access to the resource is denied</a></li><li><a href="https://zhuanlan.zhihu.com/p/187505981">什么是Docker？看这一篇干货文章就够了！</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 研究生 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 打工日记 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
